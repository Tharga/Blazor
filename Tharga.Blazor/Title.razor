@using System.Text.RegularExpressions
@using Microsoft.Extensions.Options
@rendermode CustomRenderModes.StandardMode
@inject NavigationManager NavigationManager
@inject IOptions<ThargaBlazorOptions> Options

@if (ChildContent != null)
{
    <PageTitle>@($"{MainTitle} - ") @ChildContent</PageTitle>
}
else
{
    <PageTitle>@($"{MainTitle}{_autoTitle}")</PageTitle>
}

@code {
    private string _autoTitle;

    private string MainTitle { get; set; } = "Untitled";

    [Parameter]
    public RenderFragment ChildContent { get; set; } = null;

    protected override Task OnInitializedAsync()
    {
        MainTitle = Options?.Value.Title;
        NavigationManager.LocationChanged += (_, _) => { BuildAutoTitle(); };
        BuildAutoTitle();

        return base.OnInitializedAsync();
    }

    private void BuildAutoTitle()
    {
        var pattern = @"https?:\/\/[^\/]+\/([^\/]+)";
        var match = Regex.Match(NavigationManager.Uri, pattern);
        if (match.Success && match.Groups.Count > 1)
        {
            _autoTitle = $" - {match.Groups[1].Value.Substring(0, 1).ToUpper()}{match.Groups[1].Value.Substring(1)}";
            StateHasChanged();
        }
    }

}
